name: On Merge

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Publish Image to dev
    runs-on: ubuntu-latest

    steps:
    - name: Change git URLs to use SSH
      run: echo -e '[url "git@github.com:"]\n  insteadOf = "https://github.com/"' >> ~/.gitconfig

    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v2.3.1
      with:
        url: https://default-cluster.vault.ce447047-e51d-4eb7-bd36-0b25f028a101.aws.hashicorp.cloud:8200
        method: approle
        roleId: ${{ secrets.VAULT_APP_ROLE_ID }}
        secretId: ${{ secrets.VAULT_APP_ROLE_SECRET }}
        namespace: admin
        exportEnv: true
        secrets: | # Sample for getting a secret. Format = VAULT_PATH FIELD_IN_VALUE | NAME_TO_SET_AS_FOR_THIS_ACTION ;
          secrets/internal/aws/access_key_id value | AWS_ACCESS_KEY_ID ;
          secrets/internal/aws/secret_access_key value | AWS_SECRET_ACCESS_KEY ; 
          secrets/internal/stefan-demo GH_APP_ID | GH_APP_ID ; 
          secrets/internal/stefan-demo GH_APP_KEY | GH_APP_KEY ; 
          secrets/internal/stefan-demo IMAGE_REGISTRY_PASSWORD | IMAGE_REGISTRY_PASSWORD ; 
          secrets/internal/stefan-demo SSH_MACHINE_KEY | SSH_MACHINE_KEY   ; 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ steps.secrets.outputs.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ steps.secrets.outputs.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ steps.secrets.outputs.SSH_MACHINE_KEY }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Publish image
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_NAME: ${{ github.event.repository.name }}
      run: |
        docker build -t temp/temp -f Dockerfile .
        docker tag temp/temp $ECR_REGISTRY/$IMAGE_NAME:latest
        docker tag temp/temp $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        docker push $ECR_REGISTRY/$IMAGE_NAME:latest
        docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Build manifest for dev
      id: generate-deployment-manifest
      run: |
        cd deploy/dev
        kustomize edit set image "*:${{github.sha}}" 
        echo ::set-output name=tagged_manifest::$(kustomize build | base64)

    - name: Connect to Deployment repo
      uses: getsentry/action-github-app-token@v1
      id: generate-token
      with:
        app_id: ${{ steps.secrets.outputs.GH_APP_ID }}
        private_key: ${{ steps.secrets.outputs.GH_APP_KEY }}

    - name: Checkout deployment repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ steps.secrets.outputs.SSH_MACHINE_KEY }}
        repository: PerchCredit/deployment-demo

    - name: Update manifest in deployment repo
      run: |
        echo "${{ steps.generate-deployment-manifest.outputs.tagged_manifest }}" | base64 -di > dev/manifest.yml

    - name: Create Pull Request in deployment repo
      uses: peter-evans/create-pull-request@v3
      id: deployDevPR
      with:
        token: ${{ steps.generate-token.outputs.token }}
        title: Update ${{ github.event.repository.name }} manifest for dev
        body: Update ${{ github.event.repository.name }} manifest for dev to ${{ github.sha }}
    
    # https://github.com/peter-evans/enable-pull-request-automerge#conditions
    # - name: Enable Pull Request Automerge
    #   if: steps.deployDevPR.outputs.pull-request-operation == 'created'
    #   uses: peter-evans/enable-pull-request-automerge@v1
    #   with:
    #       token: ${{ steps.generate-token.outputs.token }}
    #       pull-request-number: ${{ steps.deployDevPR.outputs.pull-request-number }}
    #       merge-method: squash